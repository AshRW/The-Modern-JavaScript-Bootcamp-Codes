{"version":3,"sources":["webpack://boilerplate/./src/hangman-back-codes.js","webpack://boilerplate/./src/index.js","webpack://boilerplate/./node_modules/regenerator-runtime/runtime.js","webpack://boilerplate/webpack/bootstrap","webpack://boilerplate/webpack/startup"],"names":["Hang","word","numberOfGuess","this","toLowerCase","split","guessedLetters","status","returnDomElement","document","createElement","puzzleString","forEach","item","includes","appendChild","createSpan","innerHTML","guess","getPuzzle","push","textContent","newSpan","fetch","response","json","data","Error","hangman1","puzzleElement","querySelector","remainingGuessElement","startGame","puzzleWord","puzzle","console","log","addEventListener","e","window","guessChar","key","toString","remove","global","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","runtime","regeneratorRuntime","module","exports","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","self","tryLocsList","iter","next","then","result","done","value","keys","object","reverse","length","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","resetTryEntry","charAt","isNaN","slice","stop","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","i","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","abrupt","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","obj","err","invoke","resolve","reject","Promise","unwrapped","previousPromise","callInvokeWithMethodAndArg","return","TypeError","info","pushTryEntry","locs","iteratorMethod","Function","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"mappings":"sUAAMA,E,WACF,WAAYC,EAAMC,I,4FAAc,SAC5BC,KAAKF,KAAOA,EAAKG,cAAcC,MAAM,IACrCF,KAAKD,cAAgBA,EACrBC,KAAKG,eAAiB,GACtBH,KAAKI,OAAS,U,8CAElB,WAAY,WACFC,EAAmBC,SAASC,cAAc,OAE5CC,EAAe,GAUnB,OATAR,KAAKF,KAAKW,SAAQ,SAACC,GACZ,EAAKP,eAAeQ,SAASD,IAAkB,MAATA,GACrCF,GAAgBE,EAChBL,EAAiBO,YAAY,EAAKC,WAAWH,MAE7CF,GAAgB,IAChBH,EAAiBO,YAAY,EAAKC,WAAW,UAGlDL,EAAaG,SAAS,KACdN,EAAiBS,WAExBd,KAAKI,OAAS,WACd,uB,uBAGR,SAAUW,GACN,OAAIf,KAAKG,eAAeQ,SAASI,GActBf,KAAKgB,aAbZhB,KAAKG,eAAec,KAAKF,GACtBf,KAAKF,KAAKa,SAASI,GACXf,KAAKgB,YAEThB,KAAKD,cAAc,GAClBC,KAAKD,eAAiB,EACfC,KAAKgB,cAEZhB,KAAKI,OAAO,SACZ,wB,wBAOhB,SAAWc,GACP,IAAMC,EAAUb,SAASC,cAAc,QAEvC,OADAY,EAAQD,YAAYA,EACbC,O,sBAITH,EAAS,e,EAAA,G,EAAA,yBAAG,qHACSI,MAAM,gCAAiC,IADhD,UAEQ,OADhBC,EADQ,QAEDjB,OAFC,iCAGSiB,EAASC,OAHlB,cAGJC,EAHI,yBAIHA,GAJG,cAMJ,IAAIC,MAAM,yBANN,2C,+KAAH,qD,yHClDf,IAEIC,EAFEC,EAAgBpB,SAASqB,cAAc,WACvCC,EAAwBtB,SAASqB,cAAc,sBAI/CE,EAAS,e,EAAA,G,EAAA,yBAAG,mHACWb,IADX,QACRc,EADQ,QAEsBC,OAAO7B,MAAM,IACjD8B,QAAQC,IAAIH,GACZL,EAAW,IAAI5B,EAAKiC,EAAWC,OAAQ,GACvCL,EAAcZ,UAAU,GACxBY,EAAcZ,UAAUW,EAAST,YAQjCY,EAAsBV,YAAtB,mBAAgDO,EAAS1B,cAAzD,sBAdc,0C,+KAAH,qDAiBf8B,IAEAvB,SAASqB,cAAc,UAAUO,iBAAiB,SAAS,SAACC,GACxDN,OAGJO,OAAOF,iBAAiB,YAAW,SAACC,GACX,YAAlBV,EAASrB,QACRsB,EAAcZ,UAAWW,EAASY,UAAUF,EAAEG,IAAIC,YAClDX,EAAsBV,YAAtB,mBAAgDO,EAAS1B,cAAzD,wBAEAiC,QAAQC,IAAI,QACZL,EAAsBY,c,SC7B7B,SAAUC,GACT,aAEA,IAEIC,EAFAC,EAAKC,OAAOC,UACZC,EAASH,EAAGI,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAG3CC,EAAUf,EAAOgB,mBACrB,GAAID,EAIAE,EAAOC,QAAUH,MAJrB,EAaAA,EAAUf,EAAOgB,mBAAgCC,EAAOC,SAchDC,KAAOA,EAoBf,IAAIC,EAAyB,iBACzBC,EAAyB,iBACzBC,EAAoB,YACpBC,EAAoB,YAIpBC,EAAmB,GAYnBC,EAAoB,GACxBA,EAAkBhB,GAAkB,WAClC,OAAOlD,MAGT,IAAImE,EAAWvB,OAAOwB,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4B1B,GAC5BG,EAAOyB,KAAKF,EAAyBnB,KAGvCgB,EAAoBG,GAGtB,IAAIG,EAAKC,EAA2B5B,UAClC6B,EAAU7B,UAAYD,OAAO+B,OAAOT,GACtCU,EAAkB/B,UAAY2B,EAAGK,YAAcJ,EAC/CA,EAA2BI,YAAcD,EACzCH,EAA2BnB,GACzBsB,EAAkBE,YAAc,oBAYlCtB,EAAQuB,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOH,YAClD,QAAOI,IACHA,IAASL,GAG2B,uBAAnCK,EAAKH,aAAeG,EAAKC,QAIhC1B,EAAQ2B,KAAO,SAASH,GAUtB,OATIpC,OAAOwC,eACTxC,OAAOwC,eAAeJ,EAAQP,IAE9BO,EAAOK,UAAYZ,EACbnB,KAAqB0B,IACzBA,EAAO1B,GAAqB,sBAGhC0B,EAAOnC,UAAYD,OAAO+B,OAAOH,GAC1BQ,GAOTxB,EAAQ8B,MAAQ,SAASC,GACvB,MAAO,CAAEC,QAASD,IA8EpBE,EAAsBC,EAAc7C,WACpC6C,EAAc7C,UAAUO,GAAuB,WAC7C,OAAOpD,MAETwD,EAAQkC,cAAgBA,EAKxBlC,EAAQmC,MAAQ,SAASC,EAASC,EAASC,EAAMC,GAC/C,IAAIC,EAAO,IAAIN,EACb9B,EAAKgC,EAASC,EAASC,EAAMC,IAG/B,OAAOvC,EAAQuB,oBAAoBc,GAC/BG,EACAA,EAAKC,OAAOC,MAAK,SAASC,GACxB,OAAOA,EAAOC,KAAOD,EAAOE,MAAQL,EAAKC,WAsKjDR,EAAsBjB,GAEtBA,EAAGlB,GAAqB,YAOxBkB,EAAGtB,GAAkB,WACnB,OAAOlD,MAGTwE,EAAGjC,SAAW,WACZ,MAAO,sBAkCTiB,EAAQ8C,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAIhE,KAAOiE,EACdD,EAAKrF,KAAKqB,GAMZ,OAJAgE,EAAKE,UAIE,SAASP,IACd,KAAOK,EAAKG,QAAQ,CAClB,IAAInE,EAAMgE,EAAKI,MACf,GAAIpE,KAAOiE,EAGT,OAFAN,EAAKI,MAAQ/D,EACb2D,EAAKG,MAAO,EACLH,EAQX,OADAA,EAAKG,MAAO,EACLH,IAsCXzC,EAAQc,OAASA,EAMjBqC,EAAQ9D,UAAY,CAClBgC,YAAa8B,EAEbC,MAAO,SAASC,GAcd,GAbA7G,KAAK8G,KAAO,EACZ9G,KAAKiG,KAAO,EAGZjG,KAAK+G,KAAO/G,KAAKgH,MAAQtE,EACzB1C,KAAKoG,MAAO,EACZpG,KAAKiH,SAAW,KAEhBjH,KAAKkH,OAAS,OACdlH,KAAKuF,IAAM7C,EAEX1C,KAAKmH,WAAW1G,QAAQ2G,IAEnBP,EACH,IAAK,IAAI3B,KAAQlF,KAEQ,MAAnBkF,EAAKmC,OAAO,IACZvE,EAAOyB,KAAKvE,KAAMkF,KACjBoC,OAAOpC,EAAKqC,MAAM,MACrBvH,KAAKkF,GAAQxC,IAMrB8E,KAAM,WACJxH,KAAKoG,MAAO,EAEZ,IACIqB,EADYzH,KAAKmH,WAAW,GACLO,WAC3B,GAAwB,UAApBD,EAAWE,KACb,MAAMF,EAAWlC,IAGnB,OAAOvF,KAAK4H,MAGdC,kBAAmB,SAASC,GAC1B,GAAI9H,KAAKoG,KACP,MAAM0B,EAGR,IAAIC,EAAU/H,KACd,SAASgI,EAAOC,EAAKC,GAYnB,OAXAC,EAAOR,KAAO,QACdQ,EAAO5C,IAAMuC,EACbC,EAAQ9B,KAAOgC,EAEXC,IAGFH,EAAQb,OAAS,OACjBa,EAAQxC,IAAM7C,KAGNwF,EAGZ,IAAK,IAAIE,EAAIpI,KAAKmH,WAAWV,OAAS,EAAG2B,GAAK,IAAKA,EAAG,CACpD,IAAIC,EAAQrI,KAAKmH,WAAWiB,GACxBD,EAASE,EAAMX,WAEnB,GAAqB,SAAjBW,EAAMC,OAIR,OAAON,EAAO,OAGhB,GAAIK,EAAMC,QAAUtI,KAAK8G,KAAM,CAC7B,IAAIyB,EAAWzF,EAAOyB,KAAK8D,EAAO,YAC9BG,EAAa1F,EAAOyB,KAAK8D,EAAO,cAEpC,GAAIE,GAAYC,EAAY,CAC1B,GAAIxI,KAAK8G,KAAOuB,EAAMI,SACpB,OAAOT,EAAOK,EAAMI,UAAU,GACzB,GAAIzI,KAAK8G,KAAOuB,EAAMK,WAC3B,OAAOV,EAAOK,EAAMK,iBAGjB,GAAIH,GACT,GAAIvI,KAAK8G,KAAOuB,EAAMI,SACpB,OAAOT,EAAOK,EAAMI,UAAU,OAG3B,KAAID,EAMT,MAAM,IAAIhH,MAAM,0CALhB,GAAIxB,KAAK8G,KAAOuB,EAAMK,WACpB,OAAOV,EAAOK,EAAMK,gBAU9BC,OAAQ,SAAShB,EAAMpC,GACrB,IAAK,IAAI6C,EAAIpI,KAAKmH,WAAWV,OAAS,EAAG2B,GAAK,IAAKA,EAAG,CACpD,IAAIC,EAAQrI,KAAKmH,WAAWiB,GAC5B,GAAIC,EAAMC,QAAUtI,KAAK8G,MACrBhE,EAAOyB,KAAK8D,EAAO,eACnBrI,KAAK8G,KAAOuB,EAAMK,WAAY,CAChC,IAAIE,EAAeP,EACnB,OAIAO,IACU,UAATjB,GACS,aAATA,IACDiB,EAAaN,QAAU/C,GACvBA,GAAOqD,EAAaF,aAGtBE,EAAe,MAGjB,IAAIT,EAASS,EAAeA,EAAalB,WAAa,GAItD,OAHAS,EAAOR,KAAOA,EACdQ,EAAO5C,IAAMA,EAETqD,GACF5I,KAAKkH,OAAS,OACdlH,KAAKiG,KAAO2C,EAAaF,WAClBzE,GAGFjE,KAAK6I,SAASV,IAGvBU,SAAU,SAASV,EAAQW,GACzB,GAAoB,UAAhBX,EAAOR,KACT,MAAMQ,EAAO5C,IAcf,MAXoB,UAAhB4C,EAAOR,MACS,aAAhBQ,EAAOR,KACT3H,KAAKiG,KAAOkC,EAAO5C,IACM,WAAhB4C,EAAOR,MAChB3H,KAAK4H,KAAO5H,KAAKuF,IAAM4C,EAAO5C,IAC9BvF,KAAKkH,OAAS,SACdlH,KAAKiG,KAAO,OACa,WAAhBkC,EAAOR,MAAqBmB,IACrC9I,KAAKiG,KAAO6C,GAGP7E,GAGT8E,OAAQ,SAASL,GACf,IAAK,IAAIN,EAAIpI,KAAKmH,WAAWV,OAAS,EAAG2B,GAAK,IAAKA,EAAG,CACpD,IAAIC,EAAQrI,KAAKmH,WAAWiB,GAC5B,GAAIC,EAAMK,aAAeA,EAGvB,OAFA1I,KAAK6I,SAASR,EAAMX,WAAYW,EAAMS,UACtC1B,EAAciB,GACPpE,IAKb,MAAS,SAASqE,GAChB,IAAK,IAAIF,EAAIpI,KAAKmH,WAAWV,OAAS,EAAG2B,GAAK,IAAKA,EAAG,CACpD,IAAIC,EAAQrI,KAAKmH,WAAWiB,GAC5B,GAAIC,EAAMC,SAAWA,EAAQ,CAC3B,IAAIH,EAASE,EAAMX,WACnB,GAAoB,UAAhBS,EAAOR,KAAkB,CAC3B,IAAIqB,EAASb,EAAO5C,IACpB6B,EAAciB,GAEhB,OAAOW,GAMX,MAAM,IAAIxH,MAAM,0BAGlByH,cAAe,SAASC,EAAUC,EAAYC,GAa5C,OAZApJ,KAAKiH,SAAW,CACd9D,SAAUmB,EAAO4E,GACjBC,WAAYA,EACZC,QAASA,GAGS,SAAhBpJ,KAAKkH,SAGPlH,KAAKuF,IAAM7C,GAGNuB,IA3qBX,SAASL,EAAKgC,EAASC,EAASC,EAAMC,GAEpC,IAAIsD,EAAiBxD,GAAWA,EAAQhD,qBAAqB6B,EAAYmB,EAAUnB,EAC/E4E,EAAY1G,OAAO+B,OAAO0E,EAAexG,WACzCkF,EAAU,IAAIpB,EAAQZ,GAAe,IAMzC,OAFAuD,EAAUC,QA0MZ,SAA0B3D,EAASE,EAAMiC,GACvC,IAAIyB,EAAQ3F,EAEZ,OAAO,SAAgBqD,EAAQ3B,GAC7B,GAAIiE,IAAUzF,EACZ,MAAM,IAAIvC,MAAM,gCAGlB,GAAIgI,IAAUxF,EAAmB,CAC/B,GAAe,UAAXkD,EACF,MAAM3B,EAKR,OAAOkE,IAMT,IAHA1B,EAAQb,OAASA,EACjBa,EAAQxC,IAAMA,IAED,CACX,IAAI0B,EAAWc,EAAQd,SACvB,GAAIA,EAAU,CACZ,IAAIyC,EAAiBC,EAAoB1C,EAAUc,GACnD,GAAI2B,EAAgB,CAClB,GAAIA,IAAmBzF,EAAkB,SACzC,OAAOyF,GAIX,GAAuB,SAAnB3B,EAAQb,OAGVa,EAAQhB,KAAOgB,EAAQf,MAAQe,EAAQxC,SAElC,GAAuB,UAAnBwC,EAAQb,OAAoB,CACrC,GAAIsC,IAAU3F,EAEZ,MADA2F,EAAQxF,EACF+D,EAAQxC,IAGhBwC,EAAQF,kBAAkBE,EAAQxC,SAEN,WAAnBwC,EAAQb,QACjBa,EAAQY,OAAO,SAAUZ,EAAQxC,KAGnCiE,EAAQzF,EAER,IAAIoE,EAASyB,EAAShE,EAASE,EAAMiC,GACrC,GAAoB,WAAhBI,EAAOR,KAAmB,CAO5B,GAJA6B,EAAQzB,EAAQ3B,KACZpC,EACAF,EAEAqE,EAAO5C,MAAQtB,EACjB,SAGF,MAAO,CACLoC,MAAO8B,EAAO5C,IACda,KAAM2B,EAAQ3B,MAGS,UAAhB+B,EAAOR,OAChB6B,EAAQxF,EAGR+D,EAAQb,OAAS,QACjBa,EAAQxC,IAAM4C,EAAO5C,OAlRPsE,CAAiBjE,EAASE,EAAMiC,GAE7CuB,EAcT,SAASM,EAASE,EAAIC,EAAKxE,GACzB,IACE,MAAO,CAAEoC,KAAM,SAAUpC,IAAKuE,EAAGvF,KAAKwF,EAAKxE,IAC3C,MAAOyE,GACP,MAAO,CAAErC,KAAM,QAASpC,IAAKyE,IAiBjC,SAAStF,KACT,SAASE,KACT,SAASH,KA4BT,SAASgB,EAAsB5C,GAC7B,CAAC,OAAQ,QAAS,UAAUpC,SAAQ,SAASyG,GAC3CrE,EAAUqE,GAAU,SAAS3B,GAC3B,OAAOvF,KAAKuJ,QAAQrC,EAAQ3B,OAoClC,SAASG,EAAc4D,GACrB,SAASW,EAAO/C,EAAQ3B,EAAK2E,EAASC,GACpC,IAAIhC,EAASyB,EAASN,EAAUpC,GAASoC,EAAW/D,GACpD,GAAoB,UAAhB4C,EAAOR,KAEJ,CACL,IAAIxB,EAASgC,EAAO5C,IAChBc,EAAQF,EAAOE,MACnB,OAAIA,GACiB,iBAAVA,GACPvD,EAAOyB,KAAK8B,EAAO,WACd+D,QAAQF,QAAQ7D,EAAMb,SAASU,MAAK,SAASG,GAClD4D,EAAO,OAAQ5D,EAAO6D,EAASC,MAC9B,SAASH,GACVC,EAAO,QAASD,EAAKE,EAASC,MAI3BC,QAAQF,QAAQ7D,GAAOH,MAAK,SAASmE,GAgB1ClE,EAAOE,MAAQgE,EACfH,EAAQ/D,KACPgE,GAhCHA,EAAOhC,EAAO5C,KAoClB,IAAI+E,EAgCJtK,KAAKuJ,QA9BL,SAAiBrC,EAAQ3B,GACvB,SAASgF,IACP,OAAO,IAAIH,SAAQ,SAASF,EAASC,GACnCF,EAAO/C,EAAQ3B,EAAK2E,EAASC,MAIjC,OAAOG,EAaLA,EAAkBA,EAAgBpE,KAChCqE,EAGAA,GACEA,KA+GV,SAASZ,EAAoB1C,EAAUc,GACrC,IAAIb,EAASD,EAAS9D,SAAS4E,EAAQb,QACvC,GAAIA,IAAWxE,EAAW,CAKxB,GAFAqF,EAAQd,SAAW,KAEI,UAAnBc,EAAQb,OAAoB,CAC9B,GAAID,EAAS9D,SAASqH,SAGpBzC,EAAQb,OAAS,SACjBa,EAAQxC,IAAM7C,EACdiH,EAAoB1C,EAAUc,GAEP,UAAnBA,EAAQb,QAGV,OAAOjD,EAIX8D,EAAQb,OAAS,QACjBa,EAAQxC,IAAM,IAAIkF,UAChB,kDAGJ,OAAOxG,EAGT,IAAIkE,EAASyB,EAAS1C,EAAQD,EAAS9D,SAAU4E,EAAQxC,KAEzD,GAAoB,UAAhB4C,EAAOR,KAIT,OAHAI,EAAQb,OAAS,QACjBa,EAAQxC,IAAM4C,EAAO5C,IACrBwC,EAAQd,SAAW,KACZhD,EAGT,IAAIyG,EAAOvC,EAAO5C,IAElB,OAAMmF,EAOFA,EAAKtE,MAGP2B,EAAQd,EAASkC,YAAcuB,EAAKrE,MAGpC0B,EAAQ9B,KAAOgB,EAASmC,QAQD,WAAnBrB,EAAQb,SACVa,EAAQb,OAAS,OACjBa,EAAQxC,IAAM7C,GAUlBqF,EAAQd,SAAW,KACZhD,GANEyG,GA3BP3C,EAAQb,OAAS,QACjBa,EAAQxC,IAAM,IAAIkF,UAAU,oCAC5B1C,EAAQd,SAAW,KACZhD,GAoDX,SAAS0G,EAAaC,GACpB,IAAIvC,EAAQ,CAAEC,OAAQsC,EAAK,IAEvB,KAAKA,IACPvC,EAAMI,SAAWmC,EAAK,IAGpB,KAAKA,IACPvC,EAAMK,WAAakC,EAAK,GACxBvC,EAAMS,SAAW8B,EAAK,IAGxB5K,KAAKmH,WAAWlG,KAAKoH,GAGvB,SAASjB,EAAciB,GACrB,IAAIF,EAASE,EAAMX,YAAc,GACjCS,EAAOR,KAAO,gBACPQ,EAAO5C,IACd8C,EAAMX,WAAaS,EAGrB,SAASxB,EAAQZ,GAIf/F,KAAKmH,WAAa,CAAC,CAAEmB,OAAQ,SAC7BvC,EAAYtF,QAAQkK,EAAc3K,MAClCA,KAAK4G,OAAM,GA8Bb,SAAStC,EAAO4E,GACd,GAAIA,EAAU,CACZ,IAAI2B,EAAiB3B,EAAShG,GAC9B,GAAI2H,EACF,OAAOA,EAAetG,KAAK2E,GAG7B,GAA6B,mBAAlBA,EAASjD,KAClB,OAAOiD,EAGT,IAAK5B,MAAM4B,EAASzC,QAAS,CAC3B,IAAI2B,GAAK,EAAGnC,EAAO,SAASA,IAC1B,OAASmC,EAAIc,EAASzC,QACpB,GAAI3D,EAAOyB,KAAK2E,EAAUd,GAGxB,OAFAnC,EAAKI,MAAQ6C,EAASd,GACtBnC,EAAKG,MAAO,EACLH,EAOX,OAHAA,EAAKI,MAAQ3D,EACbuD,EAAKG,MAAO,EAELH,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMwD,GAIjB,SAASA,IACP,MAAO,CAAEpD,MAAO3D,EAAW0D,MAAM,IAhgBpC,CA8sBC,WAAc,OAAOpG,KAArB,IAAkC8K,SAAS,cAATA,MCptBhCC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBvI,IAAjBwI,EACH,OAAOA,EAAavH,QAGrB,IAAID,EAASqH,EAAyBE,GAAY,CAGjDtH,QAAS,IAOV,OAHAwH,EAAoBF,GAAUvH,EAAQA,EAAOC,QAASqH,GAG/CtH,EAAOC,QClBfqH,EAAoB,KACMA,EAAoB,M","file":"main.js","sourcesContent":["class Hang{\r\n    constructor(word, numberOfGuess){\r\n        this.word = word.toLowerCase().split('');\r\n        this.numberOfGuess = numberOfGuess;\r\n        this.guessedLetters = [];\r\n        this.status = 'playing';\r\n    }\r\n    getPuzzle() {\r\n        const returnDomElement = document.createElement('div');\r\n\r\n        let puzzleString = '';\r\n        this.word.forEach((item)=>{\r\n            if(this.guessedLetters.includes(item) || item === ' '){\r\n                puzzleString += item;\r\n                returnDomElement.appendChild(this.createSpan(item))\r\n            }else{\r\n                puzzleString += '*';\r\n                returnDomElement.appendChild(this.createSpan('*'))\r\n            }\r\n        })\r\n        if(puzzleString.includes('*')){\r\n            return returnDomElement.innerHTML;\r\n        } else {\r\n            this.status = 'finished';\r\n            return `You Won the Game!`\r\n        }\r\n    }\r\n    guessChar(guess) {\r\n        if(!this.guessedLetters.includes(guess)){\r\n            this.guessedLetters.push(guess);\r\n            if(this.word.includes(guess)){    \r\n                return this.getPuzzle();\r\n            } else {\r\n                if(this.numberOfGuess>1){\r\n                    this.numberOfGuess -= 1;\r\n                    return this.getPuzzle();\r\n                } else {\r\n                    this.status='failed';\r\n                    return `You lost the game`\r\n                }\r\n            }\r\n        } else {\r\n            return this.getPuzzle();\r\n        }\r\n    }\r\n    createSpan(textContent){\r\n        const newSpan = document.createElement('span');\r\n        newSpan.textContent=textContent;\r\n        return newSpan\r\n    }\r\n}\r\n\r\nconst getPuzzle = async () => {\r\n    const response = await fetch('https://puzzle.mead.io/puzzle', {})\r\n    if (response.status===200){\r\n        const data = await response.json();\r\n        return data;\r\n    } else {\r\n        throw new Error('Problem fetching data');\r\n    }\r\n}\r\n\r\nexport {Hang as default, getPuzzle}","import Hang,{getPuzzle} from './hangman-back-codes'\r\n\r\nconst puzzleElement = document.querySelector(\".puzzle\");\r\nconst remainingGuessElement = document.querySelector('.remaining-guesses');\r\nlet hangman1;\r\n\r\n\r\nconst startGame = async ()=>{\r\n    const puzzleWord = await getPuzzle();\r\n    const brokenPuzzleWord = puzzleWord.puzzle.split('');\r\n    console.log(puzzleWord)\r\n    hangman1 = new Hang(puzzleWord.puzzle, 5);\r\n    puzzleElement.innerHTML='';\r\n    puzzleElement.innerHTML=hangman1.getPuzzle();\r\n    // debugger\r\n    // brokenPuzzleWord.forEach(item=>{\r\n    //     const newElement = document.createElement('span');\r\n    //     newElement.textContent=item;\r\n    //     puzzleElement.appendChild(newElement);\r\n    // })\r\n    // puzzleElement.textContent = hangman1.getPuzzle();\r\n    remainingGuessElement.textContent = `You have ${hangman1.numberOfGuess} guesses remaining`;\r\n}\r\n\r\nstartGame();\r\n\r\ndocument.querySelector('#reset').addEventListener('click', (e)=>{\r\n    startGame();\r\n})\r\n\r\nwindow.addEventListener('keypress',(e)=>{\r\n    if(hangman1.status==='playing'){\r\n        puzzleElement.innerHTML= hangman1.guessChar(e.key.toString());\r\n        remainingGuessElement.textContent = `You have ${hangman1.numberOfGuess} guesses remaining`;\r\n    } else {\r\n        console.log(\"here\");\r\n        remainingGuessElement.remove();\r\n    }\r\n})\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(666);\nvar __webpack_exports__ = __webpack_require__(495);\n"],"sourceRoot":""}